Scope: []
    Kind: Module
    FrameDescriptor: [<>temp2, <>temp3, <>temp0, <>temp1]
    CellVars: Empty
    FreeVars: Empty
    Scope: UserString
        Kind: Class
        FrameDescriptor: [encode, __mul__, upper, replace, translate, split, strip, find, __float__, __ge__, zfill, join, isdigit, expandtabs, rindex, isalnum, rjust, lower, __int__, count, format, isprintable, isspace, index, __rmod__, capitalize, __class__, __complex__, __repr__, __getitem__, __init__, __lt__, isalpha, startswith, __mod__, isdecimal, format_map, islower, swapcase, __hash__, endswith, title, __getnewargs__, istitle, partition, splitlines, rpartition, maketrans, rfind, isascii, isnumeric, __radd__, __str__, center, isupper, __eq__, __gt__, __contains__, __rmul__, __le__, isidentifier, __add__, rstrip, __len__, rsplit, lstrip, ljust, casefold]
        CellVars: [__class__]
        FreeVars: Empty
        Scope: zfill
            Kind: Function
            FrameDescriptor: [__annotations__, width, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: upper
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: translate
            Kind: Function
            FrameDescriptor: [args, __annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: title
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: swapcase
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: strip
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, chars, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: startswith
            Kind: Function
            FrameDescriptor: [__annotations__, prefix, start, self, end, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: splitlines
            Kind: Function
            FrameDescriptor: [__annotations__, self, keepends, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: rsplit
            Kind: Function
            FrameDescriptor: [__annotations__, self, maxsplit, <return_val>, __class__, sep]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: split
            Kind: Function
            FrameDescriptor: [__annotations__, self, maxsplit, <return_val>, __class__, sep]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: rstrip
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, chars, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: rpartition
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__, sep]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: rjust
            Kind: Function
            FrameDescriptor: [args, __annotations__, width, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: rindex
            Kind: Function
            FrameDescriptor: [__annotations__, sub, start, self, end, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: rfind
            Kind: Function
            FrameDescriptor: [__annotations__, sub, start, self, end, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: replace
            Kind: Function
            FrameDescriptor: [__annotations__, new, old, self, maxsplit, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: partition
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__, sep]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: lstrip
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, chars, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: lower
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: ljust
            Kind: Function
            FrameDescriptor: [args, __annotations__, width, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: join
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, seq, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isupper
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: istitle
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isspace
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isprintable
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isnumeric
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: islower
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isidentifier
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isdigit
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isdecimal
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isascii
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isalnum
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: isalpha
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: index
            Kind: Function
            FrameDescriptor: [__annotations__, sub, start, self, end, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: format_map
            Kind: Function
            FrameDescriptor: [__annotations__, mapping, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: format
            Kind: Function
            FrameDescriptor: [args, __annotations__, self, kwds, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: find
            Kind: Function
            FrameDescriptor: [__annotations__, sub, start, self, end, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: expandtabs
            Kind: Function
            FrameDescriptor: [__annotations__, tabsize, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: endswith
            Kind: Function
            FrameDescriptor: [__annotations__, start, self, end, suffix, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: encode
            Kind: Function
            FrameDescriptor: [__annotations__, self, encoding, <return_val>, errors, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: count
            Kind: Function
            FrameDescriptor: [__annotations__, sub, start, self, end, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: center
            Kind: Function
            FrameDescriptor: [args, __annotations__, width, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: casefold
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: capitalize
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __rmod__
            Kind: Function
            FrameDescriptor: [__annotations__, format, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __mod__
            Kind: Function
            FrameDescriptor: [args, __annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __mul__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, n, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __radd__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __add__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __getitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, index, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __len__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __contains__
            Kind: Function
            FrameDescriptor: [__annotations__, char, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __ge__
            Kind: Function
            FrameDescriptor: [__annotations__, string, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __gt__
            Kind: Function
            FrameDescriptor: [__annotations__, string, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __le__
            Kind: Function
            FrameDescriptor: [__annotations__, string, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __lt__
            Kind: Function
            FrameDescriptor: [__annotations__, string, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __eq__
            Kind: Function
            FrameDescriptor: [__annotations__, string, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __getnewargs__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __hash__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __complex__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __float__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __int__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __repr__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __str__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __init__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, seq, __class__]
            CellVars: Empty
            FreeVars: [__class__]
    Scope: UserList
        Kind: Class
        FrameDescriptor: [__lt__, __mul__, insert, remove, __delitem__, pop, __imul__, __ge__, __cast, copy, __radd__, clear, count, index, __eq__, __gt__, __iadd__, sort, __contains__, __rmul__, reverse, __class__, __le__, __setitem__, extend, __add__, __len__, __repr__, __getitem__, __doc__, __init__, append]
        CellVars: [__class__]
        FreeVars: Empty
        Scope: extend
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: sort
            Kind: Function
            FrameDescriptor: [args, __annotations__, self, kwds, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: reverse
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: index
            Kind: Function
            FrameDescriptor: [args, __annotations__, item, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: count
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: copy
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: clear
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: remove
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: pop
            Kind: Function
            FrameDescriptor: [__annotations__, self, i, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: insert
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, i, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: append
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __imul__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, n, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __mul__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, n, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __iadd__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __radd__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __add__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __delitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, i, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __setitem__
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, i, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __getitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, i, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __len__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __contains__
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __cast
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __ge__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __gt__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __eq__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __le__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __lt__
            Kind: Function
            FrameDescriptor: [__annotations__, other, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __repr__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __init__
            Kind: Function
            FrameDescriptor: [__annotations__, initlist, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
    Scope: UserDict
        Kind: Class
        FrameDescriptor: [__setitem__, fromkeys, __iter__, __len__, __getitem__, __repr__, copy, __init__, __contains__, __class__, __delitem__]
        CellVars: [__class__]
        FreeVars: Empty
        Scope: fromkeys
            Kind: Function
            FrameDescriptor: [__annotations__, d, iterable, cls, value, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: copy
            Kind: Function
            FrameDescriptor: [__annotations__, c, data, self, copy, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __repr__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __contains__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __iter__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __delitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __setitem__
            Kind: Function
            FrameDescriptor: [__annotations__, item, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __getitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __len__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __init__
            Kind: Function
            FrameDescriptor: [args, __annotations__, <>temp7, <>temp8, warnings, kwargs, self, dict, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
    Scope: ChainMap
        Kind: Class
        FrameDescriptor: [__bool__, fromkeys, __missing__, __iter__, clear, __contains__, __class__, __delitem__, __setitem__, pop, __copy__, get, __len__, __getitem__, __repr__, new_child, __doc__, copy, popitem, __init__, parents]
        CellVars: [__class__]
        FreeVars: Empty
        Scope: clear
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: pop
            Kind: Function
            FrameDescriptor: [args, __annotations__, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: popitem
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __delitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __setitem__
            Kind: Function
            FrameDescriptor: [__annotations__, self, value, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: parents
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: new_child
            Kind: Function
            FrameDescriptor: [__annotations__, self, m, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: copy
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: fromkeys
            Kind: Function
            FrameDescriptor: [args, __annotations__, iterable, cls, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __repr__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __bool__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __contains__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, key, __class__]
            CellVars: [key]
            FreeVars: [__class__]
            Scope: generator1760
                Kind: Generator
                FrameDescriptor: [__annotations__, m, <return_val>, key]
                CellVars: Empty
                FreeVars: [key]
        Scope: __iter__
            Kind: Function
            FrameDescriptor: [__annotations__, mapping, d, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __len__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: get
            Kind: Function
            FrameDescriptor: [__annotations__, default, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __getitem__
            Kind: Function
            FrameDescriptor: [__annotations__, mapping, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __missing__
            Kind: Function
            FrameDescriptor: [__annotations__, self, <return_val>, key, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __init__
            Kind: Function
            FrameDescriptor: [__annotations__, maps, self, <return_val>, __class__]
            CellVars: Empty
            FreeVars: [__class__]
