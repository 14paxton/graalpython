Scope: []
    Kind: Module
    FrameDescriptor: [<>temp0, <>temp1]
    CellVars: Empty
    FreeVars: Empty
    Scope: Scanner
        Kind: Class
        FrameDescriptor: [scan, __init__, __class__]
        CellVars: [__class__]
        FreeVars: Empty
        Scope: scan
            Kind: Function
            FrameDescriptor: [result, __annotations__, string, match, self, i, action, j, m, <return_val>, append, __class__]
            CellVars: Empty
            FreeVars: [__class__]
        Scope: __init__
            Kind: Function
            FrameDescriptor: [BRANCH, gid, <>temp13, flags, SUBPATTERN, <>temp12, __class__, p, __annotations__, s, phrase, self, action, <return_val>, lexicon]
            CellVars: Empty
            FreeVars: [__class__]
    Scope: _pickle
        Kind: Function
        FrameDescriptor: [p, __annotations__, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: _subx
        Kind: Function
        FrameDescriptor: [template, filter, __annotations__, pattern, <return_val>]
        CellVars: Empty
        FreeVars: Empty
        Scope: filter
            Kind: Function
            FrameDescriptor: [template, __annotations__, match, <return_val>]
            CellVars: Empty
            FreeVars: Empty
    Scope: _expand
        Kind: Function
        FrameDescriptor: [template, __annotations__, pattern, match, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: _compile_repl
        Kind: Function
        FrameDescriptor: [__annotations__, pattern, repl, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: _compile
        Kind: Function
        FrameDescriptor: [p, __annotations__, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: escape
        Kind: Function
        FrameDescriptor: [__annotations__, pattern, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: generator11461
        Kind: Generator
        FrameDescriptor: [__annotations__, i, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: template
        Kind: Function
        FrameDescriptor: [__annotations__, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: purge
        Kind: Function
        FrameDescriptor: [__annotations__, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: compile
        Kind: Function
        FrameDescriptor: [__annotations__, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: finditer
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: findall
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: split
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, flags, maxsplit, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: subn
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, count, flags, repl, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: sub
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, count, flags, repl, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: search
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: fullmatch
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: match
        Kind: Function
        FrameDescriptor: [__annotations__, string, pattern, flags, <return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: RegexFlag
        Kind: Class
        FrameDescriptor: [A, I, ASCII, L, UNICODE, M, DEBUG, __class__, IGNORECASE, DOTALL, LOCALE, S, T, U, X, TEMPLATE, VERBOSE, MULTILINE]
        CellVars: [__class__]
        FreeVars: Empty
