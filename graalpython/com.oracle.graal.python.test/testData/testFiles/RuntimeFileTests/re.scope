Scope: []
    Kind: Module
    FrameDescriptor: Empty
    CellVars: Empty
    FreeVars: Empty
    Scope: Scanner
        Kind: Class
        FrameDescriptor: [__init__, scan]
        CellVars: Empty
        FreeVars: Empty
        Scope: scan
            Kind: Function
            FrameDescriptor: [<return_val>, action, append, i, j, m, match, result, self, string]
            CellVars: Empty
            FreeVars: Empty
        Scope: __init__
            Kind: Function
            FrameDescriptor: [<>temp10, <>temp11, <return_val>, BRANCH, SUBPATTERN, action, flags, gid, lexicon, p, phrase, s, self]
            CellVars: Empty
            FreeVars: Empty
    Scope: _pickle
        Kind: Function
        FrameDescriptor: [<return_val>, p]
        CellVars: Empty
        FreeVars: Empty
    Scope: _subx
        Kind: Function
        FrameDescriptor: [<return_val>, filter, pattern, template]
        CellVars: Empty
        FreeVars: Empty
        Scope: filter
            Kind: Function
            FrameDescriptor: [<return_val>, match, template]
            CellVars: Empty
            FreeVars: Empty
    Scope: _expand
        Kind: Function
        FrameDescriptor: [<return_val>, match, pattern, template]
        CellVars: Empty
        FreeVars: Empty
    Scope: _compile_repl
        Kind: Function
        FrameDescriptor: [<return_val>, pattern, repl]
        CellVars: Empty
        FreeVars: Empty
    Scope: _compile
        Kind: Function
        FrameDescriptor: [<return_val>, flags, p, pattern]
        CellVars: Empty
        FreeVars: Empty
    Scope: escape
        Kind: Function
        FrameDescriptor: [<return_val>, pattern]
        CellVars: Empty
        FreeVars: Empty
    Scope: <genexpr>
        Kind: DictComp
        FrameDescriptor: [<return_val>, i]
        CellVars: Empty
        FreeVars: Empty
    Scope: template
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern]
        CellVars: Empty
        FreeVars: Empty
    Scope: purge
        Kind: Function
        FrameDescriptor: [<return_val>]
        CellVars: Empty
        FreeVars: Empty
    Scope: compile
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern]
        CellVars: Empty
        FreeVars: Empty
    Scope: finditer
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: findall
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: split
        Kind: Function
        FrameDescriptor: [<return_val>, flags, maxsplit, pattern, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: subn
        Kind: Function
        FrameDescriptor: [<return_val>, count, flags, pattern, repl, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: sub
        Kind: Function
        FrameDescriptor: [<return_val>, count, flags, pattern, repl, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: search
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: fullmatch
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: match
        Kind: Function
        FrameDescriptor: [<return_val>, flags, pattern, string]
        CellVars: Empty
        FreeVars: Empty
    Scope: RegexFlag
        Kind: Class
        FrameDescriptor: [A, ASCII, DEBUG, DOTALL, I, IGNORECASE, L, LOCALE, M, MULTILINE, S, T, TEMPLATE, U, UNICODE, VERBOSE, X]
        CellVars: Empty
        FreeVars: Empty
