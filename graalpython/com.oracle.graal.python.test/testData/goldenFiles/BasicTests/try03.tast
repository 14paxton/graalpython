ModuleRootNode Name: <module 'try03'> SourceSection: [0,61]`def fn():↵  try:↵   ...`
  Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
  FreeVars: None
  NeedsCellFrame: False
  FrameDescriptor:  Empty
  Documentation: None
  InnerRootNode SourceSection: [0,61]`def fn():↵  try:↵   ...`
    ExpressionWithSideEffect SourceSection: [0,61]`def fn():↵  try:↵   ...`
      Expression:
        EmptyNode SourceSection: None
      SideEffect:
        WriteNameNodeGen SourceSection: [0,61]`def fn():↵  try:↵   ...`
          Identifier: fn
          FunctionDefinitionNode Name: fn SourceSection: None
            Arguments: None
            KwArguments: None
            Documentation: None
            FreeVarSlots: None
            ExecutionSlots:
              FreeVarsSlots: None
              CellVarsSlots: None
            FunctionRootNode SourceSection: [0,61]`def fn():↵  try:↵   ...`
              Name: fn
              Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
              CelVars: None
              FreeVars: None
              NeedsCellFrame: False
              FrameDescriptor: 2 slots [va, <return_val>]
              ExecutionSlots:
                FreeVarsSlots: None
                CellVarsSlots: None
              InnerRootNode SourceSection: [0,61]`def fn():↵  try:↵   ...`
                ReturnTargetNode SourceSection: [0,61]`def fn():↵  try:↵   ...`
                  Body: BlockNode SourceSection: None
                    BlockNode SourceSection: None
                    FunctionBodyNode SourceSection: [12,61]`try:↵    pass↵  exce...`
                      TryFinallyNode SourceSection: [12,61]`try:↵    pass↵  exce...`
                        TryExceptNode SourceSection: None
                          ExpressionStatementNode SourceSection: [21,25]`pass`
                            EmptyNode SourceSection: [21,25]`pass`
                          ExceptNode SourceSection: None
                            ExpressionStatementNode SourceSection: [57,61]`pass`
                              EmptyNode SourceSection: [57,61]`pass`
                            WriteLocalVariableNodeGen SourceSection: None
                              Identifier: va
                              Frame: [0,va,Illegal]
                            WriteLocalVariableNodeGen SourceSection: None
                              Identifier: va
                              Frame: [0,va,Illegal]
                              ObjectLiteralNode SourceSection: None
                            ReadGlobalOrBuiltinNodeGen SourceSection: [35,45]`ValueError`
                              Identifier: ValueError
                          BlockNode SourceSection: None
                  Return Expresssion: ReadLocalVariableNodeGen SourceSection: None
                    Frame: [1,<return_val>,Object]
