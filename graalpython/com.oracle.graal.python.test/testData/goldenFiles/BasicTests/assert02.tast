ModuleRootNode Name: <module 'assert02'> SourceSection: [0,59]`def avg(marks):↵    ...`
  Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
  FreeVars: None
  NeedsCellFrame: False
  FrameDescriptor:  Empty
  Documentation: None
  InnerRootNode SourceSection: [0,59]`def avg(marks):↵    ...`
    ExpressionWithSideEffect SourceSection: [0,59]`def avg(marks):↵    ...`
      Expression:
        EmptyNode SourceSection: None
      SideEffect:
        WriteNameNodeGen SourceSection: [0,59]`def avg(marks):↵    ...`
          Identifier: avg
          FunctionDefinitionNode Name: avg SourceSection: None
            Arguments: None
            KwArguments: None
            Documentation: None
            FreeVarSlots: None
            ExecutionSlots:
              FreeVarsSlots: None
              CellVarsSlots: None
            FunctionRootNode SourceSection: [0,59]`def avg(marks):↵    ...`
              Name: avg
              Signature: varArgs=False, varKeywordArgs=False, noArguments=False, positionalOnly=True, requiresKeywordArgs=False
                Param Names: marks
              CelVars: None
              FreeVars: None
              NeedsCellFrame: False
              FrameDescriptor: 2 slots [marks, <return_val>]
              ExecutionSlots:
                FreeVarsSlots: None
                CellVarsSlots: None
              InnerRootNode SourceSection: [0,59]`def avg(marks):↵    ...`
                ReturnTargetNode SourceSection: [0,59]`def avg(marks):↵    ...`
                  Body: BlockNode SourceSection: None
                    WriteLocalVariableNodeGen SourceSection: None
                      Identifier: marks
                      Frame: [0,marks,Illegal]
                      ArgumentExpressionNode SourceSection: None
                        ReadIndexedArgumentNodeGen SourceSection: None
                          Index: 0
                    FunctionBodyNode SourceSection: [20,59]`assert len(marks) !=...`
                      AssertNode SourceSection: [20,59]`assert len(marks) !=...`
                        YesNodeGen SourceSection: None
                          BinaryComparisonNodeGen SourceSection: [27,42]`len(marks) != 0`
                            LookupAndCallBinaryNodeGen SourceSection: None
                              Op: __ne__
                            PythonCallUnary SourceSection: [27,37]`len(marks)`
                              CallUnaryMethodNodeGen SourceSection: None
                              ReadGlobalOrBuiltinNodeGen SourceSection: [27,30]`len`
                                Identifier: len
                                ReadAttributeFromObjectNotTypeNodeGen SourceSection: None
                              ReadLocalVariableNodeGen SourceSection: [31,36]`marks`
                                Frame: [0,marks,Illegal]
                            IntegerLiteralNode SourceSection: [41,42]`0`
                              Value: 0
                        StringLiteralNode SourceSection: [43,59]`"List is empty."`
                  Return Expresssion: ReadLocalVariableNodeGen SourceSection: None
                    Frame: [1,<return_val>,Illegal]
