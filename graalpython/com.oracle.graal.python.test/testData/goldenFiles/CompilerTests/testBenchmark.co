Disassembly of <module>:
000000         0 MAKE_FUNCTION                     0    (docompute)
000000         3 STORE_NAME                        0    (docompute)
000204         5 MAKE_FUNCTION                     0    (measure)
000204         8 STORE_NAME                        1    (measure)
000337        10 LOAD_BYTE_O                       5
000315        12 COLLECTION_FROM_STACK             1    (Object[])
000315        14 MAKE_FUNCTION                     1    (__benchmark__)
000315        17 STORE_NAME                        2    (__benchmark__)
000315        19 LOAD_NONE
000315        20 RETURN_VALUE

Disassembly of docompute:
000033         0 LOAD_GLOBAL                       0    (range)
000039         2 LOAD_FAST                         0    (num)
000033         4 CALL_FUNCTION                     1
000024         6 GET_ITER
000024   >>    7 FOR_ITER                          74   (to 81)                           can quicken
000028         9 STORE_FAST                        1    (i)                               generalizes: 7
000060        11 LOAD_DOUBLE_D                     0    (0.0)                             can quicken
000053        13 STORE_FAST                        2    (sum_)                            generalizes: 11
000076        15 LOAD_BYTE_I                       0                                      can quicken
000072        17 STORE_FAST                        3    (j)                               generalizes: 15
000092   >>   19 LOAD_FAST                         3    (j)                               can quicken
000096        21 LOAD_FAST                         0    (num)                             can quicken
000092        23 BINARY_OP                         14   (LT)                              can quicken, generalizes: 21, 19
000086        25 POP_AND_JUMP_IF_FALSE             54   (to 79)                           generalizes: 23
000113        29 LOAD_FAST                         2    (sum_)                            can quicken
000121        31 LOAD_DOUBLE_D                     1    (1.0)                             can quicken
000130        33 LOAD_FAST                         1    (i)                               can quicken
000134        35 LOAD_FAST                         3    (j)                               can quicken
000130        37 BINARY_OP                         0    (ADD)                             can quicken, generalizes: 35, 33
000140        39 LOAD_FAST                         1    (i)                               can quicken
000144        41 LOAD_FAST                         3    (j)                               can quicken
000140        43 BINARY_OP                         0    (ADD)                             can quicken, generalizes: 41, 39
000148        45 LOAD_BYTE_I                       1                                      can quicken
000140        47 BINARY_OP                         0    (ADD)                             can quicken, generalizes: 45, 43
000129        49 BINARY_OP                         4    (MUL)                             can quicken, generalizes: 47, 37
000154        51 LOAD_BYTE_I                       1                                      can quicken
000129        53 BINARY_OP                         20   (RSHIFT)                          can quicken, generalizes: 51, 49
000159        55 LOAD_FAST                         1    (i)                               can quicken
000128        57 BINARY_OP                         0    (ADD)                             can quicken, generalizes: 55, 53
000163        59 LOAD_BYTE_I                       1                                      can quicken
000128        61 BINARY_OP                         0    (ADD)                             can quicken, generalizes: 59, 57
000121        63 BINARY_OP                         8    (TRUEDIV)                         can quicken, generalizes: 61, 31
000113        65 BINARY_OP                         1    (INPLACE_ADD)                     can quicken, generalizes: 63, 29
000113        67 STORE_FAST                        2    (sum_)                            generalizes: 65
000178        69 LOAD_FAST                         3    (j)                               can quicken
000183        71 LOAD_BYTE_I                       1                                      can quicken
000178        73 BINARY_OP                         1    (INPLACE_ADD)                     can quicken, generalizes: 71, 69
000178        75 STORE_FAST                        3    (j)                               generalizes: 73
000086        77 JUMP_BACKWARD                     58   (to 19)
000086   >>   79 JUMP_BACKWARD                     72   (to 7)
000197   >>   81 LOAD_FAST                         2    (sum_)
000190        83 RETURN_VALUE

Disassembly of measure:
000237         0 LOAD_GLOBAL                       0    (range)
000243         2 LOAD_FAST                         0    (num)
000237         4 CALL_FUNCTION                     1
000226         6 GET_ITER
000226   >>    7 FOR_ITER                          14   (to 21)                           can quicken
000230         9 STORE_FAST                        1    (run)                             generalizes: 7
000264        11 LOAD_GLOBAL                       1    (docompute)
000274        13 LOAD_INT_O                        0    (10000)
000264        15 CALL_FUNCTION                     1
000257        17 STORE_FAST                        2    (sum_)
000257        19 JUMP_BACKWARD                     12   (to 7)
000294   >>   21 LOAD_GLOBAL                       2    (print)
000300        23 LOAD_STRING                       1    ('sum')
000307        25 LOAD_FAST                         2    (sum_)
000294        27 CALL_FUNCTION                     2
000294        29 POP_TOP
000294        30 LOAD_NONE
000294        31 RETURN_VALUE

Disassembly of __benchmark__:
000345         0 LOAD_GLOBAL                       0    (measure)
000353         2 LOAD_FAST                         0    (num)
000345         4 CALL_FUNCTION                     1
000345         6 POP_TOP
000345         7 LOAD_NONE
000345         8 RETURN_VALUE
