ModuleRootNode Name: <module 'dict01'> SourceSection: [0,26]`{x:x*x for x in rang...`
  Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
  FreeVars: None
  NeedsCellFrame: False
  FrameDescriptor:  Empty
  Documentation: None
  InnerRootNode SourceSection: [0,26]`{x:x*x for x in rang...`
    PythonCallUnary SourceSection: [0,26]`{x:x*x for x in rang...`
      CallUnaryMethodNodeGen SourceSection: None
      ReadGlobalOrBuiltinNodeGen SourceSection: None
        Identifier: dict
        ReadAttributeFromObjectNotTypeNodeGen SourceSection: None
      GeneratorExpressionNode SourceSection: [1,25]`x:x*x for x in range...`
        Name: <genexpr>
        FrameDescriptor: 2 slots [x, <return_val>]
        Enclosing
          FrameDescriptor:  Empty
        Active Flags: 2
        For Nodes: 1
        Block Nodes: 0
        Is Enclosing Frame Generator: false
        FunctionRootNode SourceSection: [1,25]`x:x*x for x in range...`
          Name: <genexpr>
          Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
          CelVars: None
          FreeVars: None
          NeedsCellFrame: False
          FrameDescriptor: 2 slots [x, <return_val>]
          ExecutionSlots:
            FreeVarsSlots: None
            CellVarsSlots: None
          InnerRootNode SourceSection: [1,25]`x:x*x for x in range...`
            GeneratorReturnTargetNode SourceSection: [1,25]`x:x*x for x in range...`
              flagSlot: 1
              GeneratorForNode SourceSection: [1,25]`x:x*x for x in range...`
                ExpressionStatementNode SourceSection: None
                  YieldNode SourceSection: None
                    flagSlot: 0
                    TupleLiteralNode SourceSection: None
                      ReadGeneratorFrameVariableNodeGen SourceSection: [1,2]`x`
                        Frame: [0,x,Illegal]
                      BinaryArithmeticExpression SourceSection: [3,6]`x*x`
                        LookupAndCallBinaryNodeGen SourceSection: None
                          Op: __mul__
                        ReadGeneratorFrameVariableNodeGen SourceSection: [3,4]`x`
                          Frame: [0,x,Illegal]
                        ReadGeneratorFrameVariableNodeGen SourceSection: [5,6]`x`
                          Frame: [0,x,Illegal]
                      PythonObjectFactoryNodeGen SourceSection: None
                    GeneratorAccessNode SourceSection: None
                WriteGeneratorFrameVariableNodeGen SourceSection: None
                  Identifier: x
                  Frame: [0,x,Illegal]
                ArgumentExpressionNode SourceSection: None
                  ReadIndexedArgumentNodeGen SourceSection: None
                    Index: 0
                GetNextNode SourceSection: None
                GeneratorAccessNode SourceSection: None
                IsBuiltinClassProfile SourceSection: None
                  CachedDispatchFirst SourceSection: None
              ReadGeneratorFrameVariableNodeGen SourceSection: None
                Frame: [1,<return_val>,Illegal]
              BlockNode SourceSection: None
              GeneratorAccessNode SourceSection: None
              PRaiseNodeGen SourceSection: None
        GetIteratorExpressionNodeGen SourceSection: [16,25]`range(20)`
          PythonCallUnary SourceSection: [16,25]`range(20)`
            CallUnaryMethodNodeGen SourceSection: None
            ReadNameNodeGen SourceSection: [16,21]`range`
              Identifier: range
              IsBuiltinClassProfile SourceSection: None
                CachedDispatchFirst SourceSection: None
            IntegerLiteralNode SourceSection: [22,24]`20`
              Value: 20
        PythonObjectFactoryNodeGen SourceSection: None
