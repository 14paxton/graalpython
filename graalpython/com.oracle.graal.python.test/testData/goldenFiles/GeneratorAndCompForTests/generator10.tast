ModuleRootNode Name: <module 'generator10'> SourceSection: [0,155]`def non_empty_lines(...`
  Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
  FreeVars: None
  NeedsCellFrame: False
  FrameDescriptor:  Empty
  Documentation: None
  InnerRootNode SourceSection: [0,155]`def non_empty_lines(...`
    ExpressionWithSideEffect SourceSection: [0,155]`def non_empty_lines(...`
      Expression:
        EmptyNode SourceSection: None
      SideEffect:
        WriteNameNodeGen SourceSection: [0,155]`def non_empty_lines(...`
          Identifier: non_empty_lines
          GeneratorFunctionDefinitionNode Name: non_empty_lines SourceSection: None
            FrameDescriptor: 4 slots [path, line, f, <return_val>]
            Active Flags: 6
            For Nodes: 2
            Block Nodes: 1
            Arguments: None
            KwArguments: None
            Documentation: None
            FreeVarSlots: None
            ExecutionSlots:
              FreeVarsSlots: None
              CellVarsSlots: None
            FunctionRootNode SourceSection: [0,155]`def non_empty_lines(...`
              Name: non_empty_lines
              Signature: varArgs=False, varKeywordArgs=False, noArguments=False, positionalOnly=True, requiresKeywordArgs=False
                Param Names: path
              CelVars: None
              FreeVars: None
              NeedsCellFrame: False
              FrameDescriptor: 4 slots [path, line, f, <return_val>]
              ExecutionSlots:
                FreeVarsSlots: None
                CellVarsSlots: None
              InnerRootNode SourceSection: [0,155]`def non_empty_lines(...`
                GeneratorReturnTargetNode SourceSection: [0,155]`def non_empty_lines(...`
                  flagSlot: 5
                  FunctionBodyNode SourceSection: [31,155]`with open(path) as f...`
                    GeneratorWithNode SourceSection: [31,155]`with open(path) as f...`
                      ElseNode SourceSection: [61,155]`for line in f:↵     ...`
                        GeneratorForNode SourceSection: None
                          GeneratorBlockNode SourceSection: None
                            WriteGeneratorFrameVariableNodeGen SourceSection: [88,107]`line = line.strip()`
                              Identifier: line
                              Frame: [1,line,Illegal]
                              PythonCallNodeGen SourceSection: [95,107]`line.strip()`
                                CallNodeGen SourceSection: None
                                GetCallAttributeNodeGen SourceSection: None
                                  ReadGeneratorFrameVariableNodeGen SourceSection: [95,99]`line`
                                    Frame: [1,line,Illegal]
                            GeneratorIfNode SourceSection: [120,155]`if line:↵           ...`
                              GeneratorAccessNode SourceSection: None
                              YesNodeGen SourceSection: None
                                ReadGeneratorFrameVariableNodeGen SourceSection: [123,127]`line`
                                  Frame: [1,line,Illegal]
                              ExpressionStatementNode SourceSection: [145,155]`yield line`
                                YieldNode SourceSection: [145,155]`yield line`
                                  flagSlot: 0
                                  ReadGeneratorFrameVariableNodeGen SourceSection: [151,155]`line`
                                    Frame: [1,line,Illegal]
                                  GeneratorAccessNode SourceSection: None
                              BlockNode SourceSection: None
                            GeneratorAccessNode SourceSection: None
                          WriteGeneratorFrameVariableNodeGen SourceSection: None
                            Identifier: line
                            Frame: [1,line,Illegal]
                          GetIteratorExpressionNodeGen SourceSection: [73,74]`f`
                            ReadGeneratorFrameVariableNodeGen SourceSection: [73,74]`f`
                              Frame: [2,f,Illegal]
                          GetNextNode SourceSection: None
                          GeneratorAccessNode SourceSection: None
                          IsBuiltinClassProfile SourceSection: None
                            CachedDispatchFirst SourceSection: None
                        BlockNode SourceSection: None
                      WriteGeneratorFrameVariableNodeGen SourceSection: None
                        Identifier: f
                        Frame: [2,f,Illegal]
                      PythonCallUnary SourceSection: [36,46]`open(path)`
                        CallUnaryMethodNodeGen SourceSection: None
                        ReadGlobalOrBuiltinNodeGen SourceSection: [36,40]`open`
                          Identifier: open
                          ReadAttributeFromObjectNotTypeNodeGen SourceSection: None
                        ReadGeneratorFrameVariableNodeGen SourceSection: [41,45]`path`
                          Frame: [0,path,Illegal]
<<<<<<< HEAD
                      LookupSpecialMethodNodeGen SourceSection: None
                      LookupSpecialMethodNodeGen SourceSection: None
=======
                          ReadVariableFromFrameNodeGen SourceSection: None
                      LookupSpecialMethodNode SourceSection: None
                        LookupAttributeInMRONodeGen SourceSection: None
                      LookupSpecialMethodNode SourceSection: None
                        LookupAttributeInMRONodeGen SourceSection: None
>>>>>>> Add special methods slots to managed classes and builtin types.
                      CachedDispatchFirst SourceSection: None
                      CallUnaryMethodNodeGen SourceSection: None
                      CallQuaternaryMethodNodeGen SourceSection: None
                      YesNodeGen SourceSection: None
                      GetClassNodeGen SourceSection: None
                      GeneratorAccessNode SourceSection: None
                  ReadGeneratorFrameVariableNodeGen SourceSection: None
                    Frame: [3,<return_val>,Illegal]
                  WriteGeneratorFrameVariableNodeGen SourceSection: None
                    Identifier: path
                    Frame: [0,path,Illegal]
                    ArgumentExpressionNode SourceSection: None
                      ReadIndexedArgumentNodeGen SourceSection: None
                        Index: 0
                  GeneratorAccessNode SourceSection: None
                  PRaiseNodeGen SourceSection: None
