ModuleRootNode Name: <module 'generator03'> SourceSection: [7,25]`for x in range(10)`
  Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
  FreeVars: None
  NeedsCellFrame: False
  FrameDescriptor:  Empty
  Documentation: `x+cforxinrange(10))`
  InnerRootNode SourceSection: [7,25]`for x in range(10)`
    GeneratorExpressionNode SourceSection: [7,25]`for x in range(10)`
      Name: [].<locals>.<genexp>:generator03:1
      FrameDescriptor: 2 slots [x, <return_val>]
      Enclosing
        FrameDescriptor:  Empty
      Active Flags: 2
      For Nodes: 1
      Block Nodes: 0
      FunctionRootNode SourceSection: [7,25]`for x in range(10)`
        Signature: varArgs=False, varKeywordArgs=False, noArguments=True, positionalOnly=True, requiresKeywordArgs=False
        CelVars: None
        FreeVars: None
        NeedsCellFrame: False
        FrameDescriptor: 2 slots [x, <return_val>]
        ExecutionSlots:
          FreeVarsSlots: None
          CellVarsSlots: None
        InnerRootNode SourceSection: [7,25]`for x in range(10)`
          GeneratorReturnTargetNode SourceSection: [7,25]`for x in range(10)`
            GeneratorForNode SourceSection: [7,25]`for x in range(10)`
              ExpressionStatementNode SourceSection: [1,6]`x + c`
                YieldNode SourceSection: [1,6]`x + c`
                  WriteGeneratorFrameVariableNodeGen SourceSection: None
                    Identifier: <return_val>
                    WriteGeneraterFrameSlotNodeGen SourceSection: None
                      Frame: [1,<return_val>,Illegal]
                    BinaryArithmeticExpression SourceSection: [1,6]`x + c`
                      LookupAndCallBinaryNodeGen SourceSection: None
                        Op: __add__
                      ReadGeneratorFrameVariableNode SourceSection: [1,2]`x`
                        Frame: [0,x,Illegal]
                        ReadVariableFromFrameNodeGen SourceSection: None
                      ReadGlobalOrBuiltinNodeGen SourceSection: [5,6]`c`
                        Identifier: c
                        ReadAttributeFromObjectNotTypeNodeGen SourceSection: None
                  GeneratorAccessNode SourceSection: None
              WriteGeneratorFrameVariableNodeGen SourceSection: None
                Identifier: x
                WriteGeneraterFrameSlotNodeGen SourceSection: None
                  Frame: [0,x,Illegal]
              ArgumentExpressionNode SourceSection: None
                ReadIndexedArgumentNodeGen SourceSection: None
              GetNextCachedNode SourceSection: None
                LookupAndCallUnaryNodeGen SourceSection: None
                  Op: __next__
              GeneratorAccessNode SourceSection: None
            ReadGeneratorFrameVariableNode SourceSection: None
              Frame: [1,<return_val>,Illegal]
              ReadVariableFromFrameNodeGen SourceSection: None
            BlockNode SourceSection: None
            GeneratorAccessNode SourceSection: None
            PRaiseNodeGen SourceSection: None
      GetIteratorExpressionNodeGen SourceSection: [16,25]`range(10)`
        GetIteratorNodeGen SourceSection: None
        PythonCallNodeGen SourceSection: [16,25]`range(10)`
          CachedCallNodeGen SourceSection: None
            CreateArgumentsNodeGen SourceSection: None
            CallDispatchNodeGen SourceSection: None
          IntegerLiteralNode SourceSection: [22,24]`10`
          ReadNameNodeGen SourceSection: None
            Identifier: range
      PythonObjectFactoryNodeGen SourceSection: None
