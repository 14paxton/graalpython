diff --git a/pandas/io/msgpack/_packer.cpp b/pandas/io/msgpack/_packer.cpp
index f793920..5b0b28c 100644
--- a/pandas/io/msgpack/_packer.cpp
+++ b/pandas/io/msgpack/_packer.cpp
@@ -680,10 +680,7 @@ typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* enc
 static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
     return (size_t) i < (size_t) limit;
 }
-#if defined (__cplusplus) && __cplusplus >= 201103L
-    #include <cstdlib>
-    #define __Pyx_sst_abs(value) std::abs(value)
-#elif SIZEOF_INT >= SIZEOF_SIZE_T
+#if SIZEOF_INT >= SIZEOF_SIZE_T
     #define __Pyx_sst_abs(value) abs(value)
 #elif SIZEOF_LONG >= SIZEOF_SIZE_T
     #define __Pyx_sst_abs(value) labs(value)
diff --git a/pandas/io/msgpack/_unpacker.cpp b/pandas/io/msgpack/_unpacker.cpp
index d6c871c..5853474 100644
--- a/pandas/io/msgpack/_unpacker.cpp
+++ b/pandas/io/msgpack/_unpacker.cpp
@@ -682,10 +682,7 @@ typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* enc
 static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
     return (size_t) i < (size_t) limit;
 }
-#if defined (__cplusplus) && __cplusplus >= 201103L
-    #include <cstdlib>
-    #define __Pyx_sst_abs(value) std::abs(value)
-#elif SIZEOF_INT >= SIZEOF_SIZE_T
+#if SIZEOF_INT >= SIZEOF_SIZE_T
     #define __Pyx_sst_abs(value) abs(value)
 #elif SIZEOF_LONG >= SIZEOF_SIZE_T
     #define __Pyx_sst_abs(value) labs(value)
diff --git a/pandas/_libs/window.cpp b/pandas/_libs/window.cpp
index d527af6..773cfe0 100644
--- a/pandas/_libs/window.cpp
+++ b/pandas/_libs/window.cpp
@@ -705,10 +705,7 @@ typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* enc
 static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
     return (size_t) i < (size_t) limit;
 }
-#if defined (__cplusplus) && __cplusplus >= 201103L
-    #include <cstdlib>
-    #define __Pyx_sst_abs(value) std::abs(value)
-#elif SIZEOF_INT >= SIZEOF_SIZE_T
+#if SIZEOF_INT >= SIZEOF_SIZE_T
     #define __Pyx_sst_abs(value) abs(value)
 #elif SIZEOF_LONG >= SIZEOF_SIZE_T
     #define __Pyx_sst_abs(value) labs(value)
@@ -881,13 +881,7 @@ static const char *__pyx_filename;

 /* Header.proto */
 #if !defined(CYTHON_CCOMPLEX)
-  #if defined(__cplusplus)
-    #define CYTHON_CCOMPLEX 1
-  #elif defined(_Complex_I)
-    #define CYTHON_CCOMPLEX 1
-  #else
     #define CYTHON_CCOMPLEX 0
-  #endif
 #endif
 #if CYTHON_CCOMPLEX
   #ifdef __cplusplus
diff --git a/pandas/core/window.py b/pandas/core/window.py
index 8657420..f7b3f08 100644
--- a/pandas/core/window.py
+++ b/pandas/core/window.py
@@ -10,7 +10,7 @@ import warnings

 import numpy as np

-import pandas._libs.window as libwindow
+libwindow = None
 from pandas.compat._optional import import_optional_dependency
 from pandas.compat.numpy import function as nv
 from pandas.util._decorators import Appender, Substitution, cache_readonly
