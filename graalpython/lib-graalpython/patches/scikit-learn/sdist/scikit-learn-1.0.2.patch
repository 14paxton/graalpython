diff --git a/sklearn/__init__.py b/sklearn/__init__.py
index 7de2303..0dc86ff 100644
--- a/sklearn/__init__.py
+++ b/sklearn/__init__.py
@@ -42,6 +42,140 @@ logger = logging.getLogger(__name__)
 __version__ = "1.0.2"
 
 
+if sys.implementation.name == "graalpy":
+    import pickle
+    sys.modules['_pickle'] = pickle
+    
+    import numpy
+
+    # Fake the scipy package
+    sys.modules["scipy"] = type(sys)("scipy")
+    sys.modules["scipy"].__path__ = ""
+    sys.modules["scipy"].__version__ = "1.8.1"
+    sys.modules["scipy"].interpolate = None
+
+    # Substitute numpy.linalg for scipy.linalg and stub imports
+    sys.modules["scipy"].linalg = numpy.linalg
+    sys.modules["scipy.linalg"] = numpy.linalg
+    numpy.linalg.cho_solve = None
+    numpy.linalg.pinvh = None
+    numpy.linalg.solve_triangular = None
+
+    sys.modules["scipy.linalg.lapack"] = type(sys)("scipy.linalg.lapack")
+    sys.modules["scipy.linalg.lapack"].get_lapack_funcs = None
+
+    sys.modules["scipy.optimize"] = type(sys)("scipy.optimize")
+    sys.modules["scipy"].optimize = sys.modules["scipy.optimize"]
+    sys.modules["scipy.optimize"].fmin_l_bfgs_b = None
+
+    sys.modules["scipy.optimize.linesearch"] = type(sys)("scipy.optimize.linesearch")
+    sys.modules["scipy.optimize.linesearch"].line_search_wolfe1 = None
+    sys.modules["scipy.optimize.linesearch"].line_search_wolfe2 = None
+
+    sys.modules["scipy.io"] = type(sys)("scipy.io")
+    sys.modules["scipy"].io = sys.modules["scipy.io"]
+
+    sys.modules["scipy.interpolate"] = type(sys)("scipy.interpolate")
+    sys.modules["scipy"].interpolate = sys.modules["scipy.interpolate"]
+    sys.modules["scipy"].interpolate.interp1d = None
+
+    sys.modules["scipy.stats"] = type(sys)("scipy.stats")
+    sys.modules["scipy"].stats = sys.modules["scipy.stats"]
+    sys.modules["scipy.stats"].spearmanr = None
+    sys.modules["scipy.stats"].rankdata = None
+    sys.modules["scipy.stats"].scoreatpercentile = None
+    sys.modules["scipy.stats"].reciprocal = object
+
+    sys.modules["scipy.misc"] = type(sys)("scipy.misc")
+    sys.modules["scipy"].misc = sys.modules["scipy.misc"]
+    sys.modules["scipy.misc"].comb = None
+    sys.modules["scipy.misc"].logsumexp = None
+
+    sys.modules["scipy.special"] = type(sys)("scipy.special")
+    sys.modules["scipy"].special = sys.modules["scipy.special"]
+    sys.modules["scipy.special"].kv = None
+    sys.modules["scipy.special"].gamma = None
+    sys.modules["scipy.special"].digamma = None
+    sys.modules["scipy.special"].binom = None
+    sys.modules["scipy.special"].erf = None
+    sys.modules["scipy.special"].expit = None
+    sys.modules["scipy.special"].gammaln = None
+    sys.modules["scipy.special"].gammainc = None
+    sys.modules["scipy.special"].boxcox = None
+    sys.modules["scipy.special"].comb = None
+
+    sys.modules["scipy.spatial"] = type(sys)("scipy.spatial")
+    sys.modules["scipy.spatial"].__path__ = ""
+
+    sys.modules["scipy.spatial.distance"] = type(sys)("scipy.spatial.distance")
+    sys.modules["scipy.spatial"].distance = sys.modules["scipy.spatial.distance"]
+    sys.modules["scipy.spatial.distance"].pdist = None
+    sys.modules["scipy.spatial.distance"].cdist = None
+    sys.modules["scipy.spatial.distance"].squareform = None
+
+    # Stub sparse type and sparse check
+    sys.modules["scipy"].sparse = type(sys)("scipy.sparse")
+    sys.modules["scipy.sparse"] = sys.modules["scipy"].sparse
+    sys.modules["scipy.sparse"].issparse = lambda x: False
+    sys.modules["scipy.sparse"].isspmatrix = lambda x: False
+    sys.modules["scipy.sparse"].isspmatrix_csr = lambda x: False
+    sys.modules["scipy.sparse"].dia_matrix = None
+    sys.modules["scipy.sparse"].csc_matrix = None
+    sys.modules["scipy.sparse"].eye = None
+    sys.modules["scipy.sparse"].csr_matrix = None
+    sys.modules["scipy.sparse"].coo_matrix = None
+    sys.modules["scipy.sparse"].dok_matrix = None
+    sys.modules["scipy.sparse"].lil_matrix = None
+
+    sys.modules["scipy.sparse.linalg"] = type(sys)("scipy.sparse.linalg")
+    sys.modules["scipy.sparse"].linalg = sys.modules["scipy.sparse.linalg"]
+    sys.modules["scipy.sparse.linalg"].eigsh = None
+    sys.modules["scipy.sparse.linalg"].eigh = None
+    sys.modules["scipy.sparse.linalg"].svds = None
+    sys.modules["scipy.sparse.linalg"].svd = None
+    sys.modules["scipy.sparse.linalg"].qr = None
+    sys.modules["scipy.sparse.linalg"].solve = None
+    sys.modules["scipy.sparse.linalg"].lobpcg = None
+    sys.modules["scipy.sparse.linalg"].lsqr = None
+
+    sys.modules["scipy.sparse.linalg.interface"] = type(sys)("scipy.sparse.linalg.interface")
+    sys.modules["scipy.sparse.linalg"].interface = sys.modules["scipy.sparse.linalg.interface"]
+    sys.modules["scipy.sparse.linalg.interface"].aslinearoperator = None
+    sys.modules["scipy.sparse.base"] = type(sys)("scipy.sparse.base")
+    sys.modules["scipy.sparse"].base = sys.modules["scipy.sparse.base"]
+    sys.modules["scipy.sparse.base"].spmatrix = type("fake_spmatrix", (), {})
+
+    sys.modules["scipy.sparse.csgraph"] = type(sys)("scipy.sparse.csgraph")
+    sys.modules["scipy.sparse"].csgraph = sys.modules["scipy.sparse.csgraph"]
+    sys.modules["scipy.sparse.csgraph"].connected_components = None
+    sys.modules["scipy.sparse.csgraph"].laplacian = None
+
+    sys.modules["sklearn.externals.joblib"] = type(sys)("sklearn.externals.joblib")
+    sys.modules["sklearn.externals.joblib"].__all__ = ()
+    sys.modules["sklearn.externals.joblib"].__version__ = "0.14"
+    sys.modules["sklearn.externals.joblib"].Parallel = None
+    sys.modules["sklearn.externals.joblib"].Memory = None
+    sys.modules["sklearn.externals.joblib"].delayed = None
+    sys.modules["sklearn.externals.joblib"].cpu_count = None
+    sys.modules["sklearn.externals.joblib"].logger = None
+    sys.modules["sklearn.externals.joblib"].register_parallel_backend = None
+    sys.modules["sklearn.externals.joblib"].parallel_backend = None
+    sys.modules["sklearn.externals.joblib"].effective_n_jobs = lambda x: True
+    sys.modules["sklearn.externals.joblib"].hash = None
+    sys.modules["sklearn.utils._joblib"] = sys.modules["sklearn.externals.joblib"]
+
+    # fast_dict and _hierarchical module won't load due to unresolved C++ symbol right now
+    sys.modules["sklearn.utils.fast_dict"] = type(sys)("sklearn.utils.fast_dict")
+    sys.modules["sklearn.utils.fast_dict"].IntFloatDict = dict
+    sys.modules["sklearn.cluster._hierarchical"] = type(sys)("sklearn.cluster._hierarchical")
+    sys.modules["sklearn.cluster._dbscan_inner"] = type(sys)("sklearn.cluster._dbscan_inner")
+    sys.modules["sklearn.cluster._dbscan_inner"].dbscan_inner = None
+
+    sys.modules["sklearn.svm.libsvm"] = type(sys)("sklearn.svm.libsvm")
+    sys.modules["sklearn.svm.libsvm_sparse"] = type(sys)("sklearn.svm.libsvm_sparse")
+    sys.modules["sklearn.svm.liblinear"] = type(sys)("sklearn.svm.liblinear")
+
+
 # On OSX, we can get a runtime error due to multiple OpenMP libraries loaded
 # simultaneously. This can happen for instance when calling BLAS inside a
 # prange. Setting the following environment variable allows multiple OpenMP
diff --git a/sklearn/svm/setup.py b/sklearn/svm/setup.py
index d5f94d8..f0cc552 100644
--- a/sklearn/svm/setup.py
+++ b/sklearn/svm/setup.py
@@ -34,7 +34,7 @@ def configuration(parent_package="", top_path=None):
         ],
         # Force C++ linking in case gcc is picked up instead
         # of g++ under windows with some versions of MinGW
-        extra_link_args=["-lstdc++"],
+        # extra_link_args=["-lstdc++"],
         # Use C++11 to use the random number generator fix
         extra_compiler_args=["-std=c++11"],
     )
@@ -79,7 +79,7 @@ def configuration(parent_package="", top_path=None):
         ],
         # Force C++ linking in case gcc is picked up instead
         # of g++ under windows with some versions of MinGW
-        extra_link_args=["-lstdc++"],
+        # extra_link_args=["-lstdc++"],
         # Use C++11 to use the random number generator fix
         extra_compiler_args=["-std=c++11"],
     )
