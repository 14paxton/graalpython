diff --git a/setup.py b/setup.py
index b936372..158056a 100644
--- a/setup.py
+++ b/setup.py
@@ -133,7 +133,7 @@ BUILD_OVERRIDE_BORING_SSL_ASM_PLATFORM = os.environ.get(
 # to have been generated by building first *with* Cython support. Even if this
 # is set to false, if the script detects that the generated `.c` file isn't
 # present, then it will still attempt to use Cython.
-BUILD_WITH_CYTHON = _env_bool_value("GRPC_PYTHON_BUILD_WITH_CYTHON", "False")
+BUILD_WITH_CYTHON = _env_bool_value("GRPC_PYTHON_BUILD_WITH_CYTHON", "True")
 
 # Export this variable to use the system installation of openssl. You need to
 # have the header files installed (in /usr/include/openssl) and during
diff --git a/src/python/grpcio/grpc/_server.py b/src/python/grpcio/grpc/_server.py
index c8af57c..ef862a2 100644
--- a/src/python/grpcio/grpc/_server.py
+++ b/src/python/grpcio/grpc/_server.py
@@ -1257,13 +1257,13 @@ def _process_event_and_continue(
     state: _ServerState, event: cygrpc.BaseEvent
 ) -> bool:
     should_continue = True
-    if event.tag is _SHUTDOWN_TAG:
+    if event.tag == _SHUTDOWN_TAG:
         with state.lock:
             state.due.remove(_SHUTDOWN_TAG)
             if _stop_serving(state):
                 should_continue = False
     elif (
-        event.tag is _REQUEST_CALL_TAG
+        event.tag == _REQUEST_CALL_TAG
         or event.tag in state.registered_method_handlers.keys()
     ):
         registered_method_name = None
