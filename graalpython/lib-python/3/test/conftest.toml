[settings]
tags_dir = '../../../com.oracle.graal.python.test/src/tests/unittest_tags'
new_worker_per_file = true

[[test_rules]]
# A list of tests that cannot run in parallel with other tests
serial = true
selector = [
    # test_compileall tries to recompile the whole PYTHONPATH, which makes it interfere with any test that
    # creates temporary py files
    'test_compileall',
    # test_import tests various behaviors related to __pycache__ directory,
    # it can interfere with other tests that generate code
    'test_import',
    'test_imp',
    'test_subprocess',
    'test_posix',
    'test_os',
    'test_io',
    'test_fileio',
    'test_imaplib',
    'test_ftplib',
    'test_multiprocessing_spawn',
    'test_multiprocessing_graalpy',
    # trying to avoid transient issues there, not sure about the reason
    'test_unittest',
    'test_logging',
    'test_zipfile',
]

[[test_rules]]
partial_splits_individual_tests = true
selector = [
    'test_multiprocessing_spawn',
    'test_multiprocessing_main_handling',
]


[[test_rules]]
exclude_on = ['graalpy']
selector = [
    # Tests for CPython-specific bytecode optimizations. Unapplicable to GraalPy and prone to breaking on random bytecode changes
    'test_peepholer',
    # We don't have fork, so although we pass surprisingly many tests in there, it's not going to cover anything useful
    'test_multiprocessing_fork',
    # Transiently fails with java.lang.IllegalStateException: There is an active child contexts after finalizeContext!
    # when the runner exits. We don't know which tests can trigger this, so we exclude the whole file.
    'test_multiprocessing_graalpy',
]


[[test_rules]]
exclude_on = ['bytecode_dsl']
selector = [
    'test_grammar', # test_grammar: AssertionError: 0 != 1 : [], line 23, in check_syntax_warning
    'test_patma', # multiple assignments to name 'z' in pattern, line 480
    'test_genexps', # expected: {'a': <generator object <genexpr> at ...>}, got {'a': <generator object genexp at 0x824052475>}
    'test_fstring', # max stack height:
    'test_code', # difference in output of dump(f.__code__)
    'test_sys_settrace', # FrameSlotTypeException from Bytecode DSL
    'test_regrtest', # class pattern matching
    # syntax error: 'await' outside async function
    'test_asyncio',
    'test_asyncgen',
    'test_coroutines',
    # not implemented: PGenerator.java:204
    'test_contextlib_async',
    'test_typing',
    'test_async_case',
    'test_exceptions', # test_generator_doesnt_retain_old_exc: wrong traceback
    'test_compile', # test_dict: bytecode DSL limited stack size
    # AssertionError: invalid bytecode node passed
    'test_copy',
    'test_dict',
    # bytecode validation error
    'test_email',
    'test_json',
]
